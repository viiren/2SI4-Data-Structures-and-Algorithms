{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 package stack;\
\
import java.util.EmptyStackException;\
\
/**\
 *\
 * @author virenwaghela\
 */\
public class Stack1<E>\{\
    \
    private Node<E> head;\
    \
    public Stack1()\{ //Creates Empty Stack \
        head = null; //Theta(1) Runtime\
    \}\
    public boolean isEmpty()\{\
        if(head==null) //Stack is empty if there are no nodes\
            return true; //Theta(1) Runtime\
        return false;       \
    \}\
    \
    public void push(int e)\{ //Stacks are LIFO\
        head = new Node<E>(e,head); //Theta(1) Runtime\
    \}\
    \
    public E pop() throws EmptyStackException\{ //Deletes First Node of LL and returns element stored there\
        if(isEmpty())\{ // Theta(1) Runtime\
            System.out.println("Stack Underflow");\}\
        else\{\
            E e = head.element;\
            head = head.next;\
            return e;\
        \}      \
        return null;\
    \}\
    \
    \
    public E top() throws EmptyStackException\{ //Same functionality as above, but does not remov elemtn from list\
        if(isEmpty())\{ //Theta(1) Runtime\
            System.out.println("Stack underflow");           \
        \}\
        else\{\
            return(head.element);\
        \}\
        return null;\
    \}\
    \
    \
\}\
}